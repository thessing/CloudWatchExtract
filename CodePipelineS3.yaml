AWSTemplateFormatVersion: '2010-09-09'
Description: Builds the CodePipeline components 

Parameters:
# ----------- Resource Details ----------- #
  PipelineName:
    Description: Name for the Pipeline
    AllowedPattern: ^([A-Za-z0-9]*)?$
    Type: String
    Default: CWE
# ----------- S3 Source Details ----------- #
  SourceBucket:
    Description: S3 for the Source Code
    AllowedPattern: ^([a-z0-9.-]{3,63})?$
    Type: String
    Default: cf-source-us-east-2-004338334110
  SourceKey:
    Description: S3 Object Key for Zipped Source code
    Type: String
    Default: CloudWatchExtract.zip
    AllowedPattern: "[A-Za-z0-9-.]+"
# ----------- Pipeline Details ----------- #
  PipelineBucket:
    Description: S3 for the CodePipeline Artifacts
    AllowedPattern: ^([a-z0-9.-]{3,63})?$
    Type: String
    Default: codepipeline-us-east-2-004338334110
# ----------- Deployment Details ----------- #
  YAMLdir:
    Description: Sub-Directory for the project YAMLs in Source Repo
    AllowedPattern: ^([A-Za-z0-9]*)?$
    Type: String
    Default: CloudFormation

Resources:
  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineBucket
      Name: !Sub ${PipelineName}-codepipeline
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: S3
              Configuration:
                S3Bucket: !Ref SourceBucket
                S3ObjectKey: !Ref SourceKey
                PollForSourceChanges: false
              OutputArtifacts:
                - Name: SourceCode
              RunOrder: 1

        - Name: BuildAndPackage
          Actions:
            - Name: Application_Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref BuildProject
              InputArtifacts:
              - Name: SourceCode
              OutputArtifacts:
              - Name: Build
              RunOrder: 1

        - Name: Deploy
          Actions:
            - Name: Cleanup_Lambdas
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: DELETE_ONLY
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !GetAtt CloudformationRole.Arn
                StackName: !Sub ${PipelineName}-lambdas-Stack
              RunOrder: 1

            - Name: Deploy_S3
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !GetAtt CloudformationRole.Arn
                StackName: !Sub ${PipelineName}-S3-Stack
                TemplateConfiguration: !Sub SourceCode::${YAMLdir}/parameters/S3_params.json
                TemplatePath: !Sub SourceCode::${YAMLdir}/S3.yaml
                OutputFileName: S3Output.json
              InputArtifacts:
                - Name: SourceCode
              OutputArtifacts: 
                - Name: S3Output
              RunOrder: 1

            - Name: Deploy_DynamoDBTable
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !GetAtt CloudformationRole.Arn
                StackName: !Sub ${PipelineName}-DynamoDBTable-CloudFormation-Stack
                TemplateConfiguration: !Sub SourceCode::${YAMLdir}/parameters/DynamoDB_params.json
                TemplatePath: !Sub SourceCode::${YAMLdir}/DynamoDB.yaml
                OutputFileName: DynamoDBOutput.json
              InputArtifacts:
                - Name: SourceCode
              OutputArtifacts: 
                - Name: DynamoDBtb
              RunOrder: 1

            - Name: Deploy_Lambdas
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !GetAtt CloudformationRole.Arn
                StackName: !Sub ${PipelineName}-Lambdas-Stack
                TemplateConfiguration: !Sub SourceCode::${YAMLdir}/parameters/Lambda_params.json
                TemplatePath: !Sub SourceCode::${YAMLdir}/Lambdas.yaml
                OutputFileName: LambdaOutput.json
              InputArtifacts:
                - Name: SourceCode
                - Name: Build
              OutputArtifacts:
                - Name: DplyLambda
              RunOrder: 2

        - Name: Decommission_Approval
          Actions:
            - Name: DecommissionApproval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: '1'
              InputArtifacts: []
              RoleArn: !GetAtt CodePipelineRole.Arn
              RunOrder: 1

        - Name: Decommission
          Actions:
            - Name: Cleanup_Lambdas
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: DELETE_ONLY
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !GetAtt CloudformationRole.Arn
                StackName: !Sub ${PipelineName}-Lambdas-Stack
              RunOrder: 1

        - Name: Decommission_DynamoDB_and_S3_Approval
          Actions:
            - Name: DecommissionLogsS3Approval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: '1'
              InputArtifacts: []
              RoleArn: !GetAtt CodePipelineRole.Arn
              RunOrder: 1

        - Name: Decommission_DynamoDB_and_S3
          Actions:
            - Name: Cleanup_DynamoDBTable
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: DELETE_ONLY
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !GetAtt CloudformationRole.Arn
                StackName: !Sub ${PipelineName}-DynamoDBTable-CloudFormation-Stack
              RunOrder: 1

            - Name: Cleanup_S3
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: DELETE_ONLY
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !GetAtt CloudformationRole.Arn
                StackName: !Sub ${PipelineName}-S3-Stack
              RunOrder: 1

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
 #       - arn:aws:iam::aws:policy/AdministratorAccess #TODO: Reduce permissions
        - arn:aws:iam::aws:policy/AWSCodeBuildAdminAccess
        - arn:aws:iam::aws:policy/AWSCloudFormationFullAccess
        - arn:aws:iam::aws:policy/AWSCodePipelineFullAccess
        - arn:aws:iam::aws:policy/AWSCodeDeployFullAccess
        - arn:aws:iam::aws:policy/IAMFullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AmazonEventBridgeFullAccess
        - arn:aws:iam::aws:policy/AWSLambda_FullAccess
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
      Tags:
        - Key: ResourceName
          Value: !Sub ${PipelineName}-CodePipeline-Role

  CloudformationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: cloudformation.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
 #       - arn:aws:iam::aws:policy/AdministratorAccess #TODO: Reduce permissions
        - arn:aws:iam::aws:policy/AWSCodeBuildAdminAccess
        - arn:aws:iam::aws:policy/AWSCloudFormationFullAccess
        - arn:aws:iam::aws:policy/AWSCodePipelineFullAccess
        - arn:aws:iam::aws:policy/AWSCodeDeployFullAccess
        - arn:aws:iam::aws:policy/IAMFullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AmazonEventBridgeFullAccess
        - arn:aws:iam::aws:policy/AWSLambda_FullAccess
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
      Tags:
        - Key: ResourceName
          Value: !Sub ${PipelineName}-Cloudformation-Role

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
 #       - arn:aws:iam::aws:policy/AdministratorAccess #TODO: Reduce permissions
        - arn:aws:iam::aws:policy/AWSCodeBuildAdminAccess
        - arn:aws:iam::aws:policy/AWSCloudFormationFullAccess
        - arn:aws:iam::aws:policy/AWSCodePipelineFullAccess
        - arn:aws:iam::aws:policy/AWSCodeDeployFullAccess
        - arn:aws:iam::aws:policy/IAMFullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AmazonEventBridgeFullAccess
        - arn:aws:iam::aws:policy/AWSLambda_FullAccess
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
      Tags:
        - Key: ResourceName
          Value: !Sub ${PipelineName}-CodeBuild-Role

  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables: 
            - Name: TEMPLATE_BUCKET
              Type: PLAINTEXT
              Value: !Ref PipelineBucket
            - Name: PIPELINE_NAME
              Type: PLAINTEXT
              Value: !Sub ${PipelineName}-codepipeline 
            - Name: GitHubOwner
              Type: PLAINTEXT
              Value: ""
            - Name: GitHubRepo
              Type: PLAINTEXT
              Value: ""
            - Name: GitHubBranch
              Type: PLAINTEXT
              Value: ""
            - Name: GitHubToken
              Type: PLAINTEXT
              Value: ""
        Image: aws/codebuild/standard:5.0
        Type: LINUX_CONTAINER
      ServiceRole: !GetAtt CodeBuildRole.Arn 
      Source:
        Type: CODEPIPELINE
      Tags:
        - Key: ResourceName
          Value: !Sub ${PipelineName}-Build-Project

Outputs:
  oCodePipeline:
    Value: !Ref CodePipeline
